/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import { Context } from "./context"


declare global {
  interface NexusGenCustomOutputProperties<TypeName extends string> {
    crud: NexusPrisma<TypeName, 'crud'>
    model: NexusPrisma<TypeName, 'model'>
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  DateTimeFieldUpdateOperationsInput: { // input type
    set?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  DateTimeFilter: { // input type
    equals?: NexusGenScalars['DateTime'] | null; // DateTime
    gt?: NexusGenScalars['DateTime'] | null; // DateTime
    gte?: NexusGenScalars['DateTime'] | null; // DateTime
    in?: NexusGenScalars['DateTime'][] | null; // [DateTime!]
    lt?: NexusGenScalars['DateTime'] | null; // DateTime
    lte?: NexusGenScalars['DateTime'] | null; // DateTime
    not?: NexusGenInputs['NestedDateTimeFilter'] | null; // NestedDateTimeFilter
    notIn?: NexusGenScalars['DateTime'][] | null; // [DateTime!]
  }
  EnumTransactionTypeFieldUpdateOperationsInput: { // input type
    set?: NexusGenEnums['TransactionType'] | null; // TransactionType
  }
  NestedDateTimeFilter: { // input type
    equals?: NexusGenScalars['DateTime'] | null; // DateTime
    gt?: NexusGenScalars['DateTime'] | null; // DateTime
    gte?: NexusGenScalars['DateTime'] | null; // DateTime
    in?: NexusGenScalars['DateTime'][] | null; // [DateTime!]
    lt?: NexusGenScalars['DateTime'] | null; // DateTime
    lte?: NexusGenScalars['DateTime'] | null; // DateTime
    not?: NexusGenInputs['NestedDateTimeFilter'] | null; // NestedDateTimeFilter
    notIn?: NexusGenScalars['DateTime'][] | null; // [DateTime!]
  }
  NestedStringFilter: { // input type
    contains?: string | null; // String
    endsWith?: string | null; // String
    equals?: string | null; // String
    gt?: string | null; // String
    gte?: string | null; // String
    in?: string[] | null; // [String!]
    lt?: string | null; // String
    lte?: string | null; // String
    not?: NexusGenInputs['NestedStringFilter'] | null; // NestedStringFilter
    notIn?: string[] | null; // [String!]
    startsWith?: string | null; // String
  }
  NullableBoolFieldUpdateOperationsInput: { // input type
    set?: boolean | null; // Boolean
  }
  NullableDateTimeFieldUpdateOperationsInput: { // input type
    set?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  NullableFloatFieldUpdateOperationsInput: { // input type
    decrement?: number | null; // Float
    divide?: number | null; // Float
    increment?: number | null; // Float
    multiply?: number | null; // Float
    set?: number | null; // Float
  }
  NullableStringFieldUpdateOperationsInput: { // input type
    set?: string | null; // String
  }
  StringFieldUpdateOperationsInput: { // input type
    set?: string | null; // String
  }
  StringFilter: { // input type
    contains?: string | null; // String
    endsWith?: string | null; // String
    equals?: string | null; // String
    gt?: string | null; // String
    gte?: string | null; // String
    in?: string[] | null; // [String!]
    lt?: string | null; // String
    lte?: string | null; // String
    mode?: NexusGenEnums['QueryMode'] | null; // QueryMode
    not?: NexusGenInputs['NestedStringFilter'] | null; // NestedStringFilter
    notIn?: string[] | null; // [String!]
    startsWith?: string | null; // String
  }
  TagCreateNestedOneWithoutTransactionsInput: { // input type
    connect?: NexusGenInputs['TagWhereUniqueInput'] | null; // TagWhereUniqueInput
    connectOrCreate?: NexusGenInputs['TagCreateOrConnectWithoutTransactionsInput'] | null; // TagCreateOrConnectWithoutTransactionsInput
    create?: NexusGenInputs['TagCreateWithoutTransactionsInput'] | null; // TagCreateWithoutTransactionsInput
  }
  TagCreateOrConnectWithoutTransactionsInput: { // input type
    create: NexusGenInputs['TagCreateWithoutTransactionsInput']; // TagCreateWithoutTransactionsInput!
    where: NexusGenInputs['TagWhereUniqueInput']; // TagWhereUniqueInput!
  }
  TagCreateWithoutTransactionsInput: { // input type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    id?: string | null; // String
    name: string; // String!
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  TagUpdateOneRequiredWithoutTransactionsInput: { // input type
    connect?: NexusGenInputs['TagWhereUniqueInput'] | null; // TagWhereUniqueInput
    connectOrCreate?: NexusGenInputs['TagCreateOrConnectWithoutTransactionsInput'] | null; // TagCreateOrConnectWithoutTransactionsInput
    create?: NexusGenInputs['TagCreateWithoutTransactionsInput'] | null; // TagCreateWithoutTransactionsInput
    update?: NexusGenInputs['TagUpdateWithoutTransactionsInput'] | null; // TagUpdateWithoutTransactionsInput
    upsert?: NexusGenInputs['TagUpsertWithoutTransactionsInput'] | null; // TagUpsertWithoutTransactionsInput
  }
  TagUpdateWithoutTransactionsInput: { // input type
    createdAt?: NexusGenInputs['DateTimeFieldUpdateOperationsInput'] | null; // DateTimeFieldUpdateOperationsInput
    id?: NexusGenInputs['StringFieldUpdateOperationsInput'] | null; // StringFieldUpdateOperationsInput
    name?: NexusGenInputs['StringFieldUpdateOperationsInput'] | null; // StringFieldUpdateOperationsInput
    updatedAt?: NexusGenInputs['DateTimeFieldUpdateOperationsInput'] | null; // DateTimeFieldUpdateOperationsInput
  }
  TagUpsertWithoutTransactionsInput: { // input type
    create: NexusGenInputs['TagCreateWithoutTransactionsInput']; // TagCreateWithoutTransactionsInput!
    update: NexusGenInputs['TagUpdateWithoutTransactionsInput']; // TagUpdateWithoutTransactionsInput!
  }
  TagWhereUniqueInput: { // input type
    id?: string | null; // String
  }
  TransactionCreateInput: { // input type
    amount?: number | null; // Float
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    date?: NexusGenScalars['DateTime'] | null; // DateTime
    id?: string | null; // String
    isFavourite?: boolean | null; // Boolean
    name?: string | null; // String
    note?: string | null; // String
    tags?: NexusGenInputs['TransactionTagsCreateNestedManyWithoutTransactionInput'] | null; // TransactionTagsCreateNestedManyWithoutTransactionInput
    type: NexusGenEnums['TransactionType']; // TransactionType!
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  TransactionTagsCreateManyTransactionInput: { // input type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    tagId: string; // String!
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  TransactionTagsCreateManyTransactionInputEnvelope: { // input type
    data?: NexusGenInputs['TransactionTagsCreateManyTransactionInput'][] | null; // [TransactionTagsCreateManyTransactionInput!]
    skipDuplicates?: boolean | null; // Boolean
  }
  TransactionTagsCreateNestedManyWithoutTransactionInput: { // input type
    connect?: NexusGenInputs['TransactionTagsWhereUniqueInput'][] | null; // [TransactionTagsWhereUniqueInput!]
    connectOrCreate?: NexusGenInputs['TransactionTagsCreateOrConnectWithoutTransactionInput'][] | null; // [TransactionTagsCreateOrConnectWithoutTransactionInput!]
    create?: NexusGenInputs['TransactionTagsCreateWithoutTransactionInput'][] | null; // [TransactionTagsCreateWithoutTransactionInput!]
    createMany?: NexusGenInputs['TransactionTagsCreateManyTransactionInputEnvelope'] | null; // TransactionTagsCreateManyTransactionInputEnvelope
  }
  TransactionTagsCreateOrConnectWithoutTransactionInput: { // input type
    create: NexusGenInputs['TransactionTagsCreateWithoutTransactionInput']; // TransactionTagsCreateWithoutTransactionInput!
    where: NexusGenInputs['TransactionTagsWhereUniqueInput']; // TransactionTagsWhereUniqueInput!
  }
  TransactionTagsCreateWithoutTransactionInput: { // input type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    tag: NexusGenInputs['TagCreateNestedOneWithoutTransactionsInput']; // TagCreateNestedOneWithoutTransactionsInput!
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  TransactionTagsScalarWhereInput: { // input type
    AND?: NexusGenInputs['TransactionTagsScalarWhereInput'][] | null; // [TransactionTagsScalarWhereInput!]
    NOT?: NexusGenInputs['TransactionTagsScalarWhereInput'][] | null; // [TransactionTagsScalarWhereInput!]
    OR?: NexusGenInputs['TransactionTagsScalarWhereInput'][] | null; // [TransactionTagsScalarWhereInput!]
    createdAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    tagId?: NexusGenInputs['StringFilter'] | null; // StringFilter
    transactionId?: NexusGenInputs['StringFilter'] | null; // StringFilter
    updatedAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
  }
  TransactionTagsTransactionIdTagIdCompoundUniqueInput: { // input type
    tagId: string; // String!
    transactionId: string; // String!
  }
  TransactionTagsUpdateManyMutationInput: { // input type
    createdAt?: NexusGenInputs['DateTimeFieldUpdateOperationsInput'] | null; // DateTimeFieldUpdateOperationsInput
    updatedAt?: NexusGenInputs['DateTimeFieldUpdateOperationsInput'] | null; // DateTimeFieldUpdateOperationsInput
  }
  TransactionTagsUpdateManyWithWhereWithoutTransactionInput: { // input type
    data: NexusGenInputs['TransactionTagsUpdateManyMutationInput']; // TransactionTagsUpdateManyMutationInput!
    where: NexusGenInputs['TransactionTagsScalarWhereInput']; // TransactionTagsScalarWhereInput!
  }
  TransactionTagsUpdateManyWithoutTransactionInput: { // input type
    connect?: NexusGenInputs['TransactionTagsWhereUniqueInput'][] | null; // [TransactionTagsWhereUniqueInput!]
    connectOrCreate?: NexusGenInputs['TransactionTagsCreateOrConnectWithoutTransactionInput'][] | null; // [TransactionTagsCreateOrConnectWithoutTransactionInput!]
    create?: NexusGenInputs['TransactionTagsCreateWithoutTransactionInput'][] | null; // [TransactionTagsCreateWithoutTransactionInput!]
    createMany?: NexusGenInputs['TransactionTagsCreateManyTransactionInputEnvelope'] | null; // TransactionTagsCreateManyTransactionInputEnvelope
    delete?: NexusGenInputs['TransactionTagsWhereUniqueInput'][] | null; // [TransactionTagsWhereUniqueInput!]
    deleteMany?: NexusGenInputs['TransactionTagsScalarWhereInput'][] | null; // [TransactionTagsScalarWhereInput!]
    disconnect?: NexusGenInputs['TransactionTagsWhereUniqueInput'][] | null; // [TransactionTagsWhereUniqueInput!]
    set?: NexusGenInputs['TransactionTagsWhereUniqueInput'][] | null; // [TransactionTagsWhereUniqueInput!]
    update?: NexusGenInputs['TransactionTagsUpdateWithWhereUniqueWithoutTransactionInput'][] | null; // [TransactionTagsUpdateWithWhereUniqueWithoutTransactionInput!]
    updateMany?: NexusGenInputs['TransactionTagsUpdateManyWithWhereWithoutTransactionInput'][] | null; // [TransactionTagsUpdateManyWithWhereWithoutTransactionInput!]
    upsert?: NexusGenInputs['TransactionTagsUpsertWithWhereUniqueWithoutTransactionInput'][] | null; // [TransactionTagsUpsertWithWhereUniqueWithoutTransactionInput!]
  }
  TransactionTagsUpdateWithWhereUniqueWithoutTransactionInput: { // input type
    data: NexusGenInputs['TransactionTagsUpdateWithoutTransactionInput']; // TransactionTagsUpdateWithoutTransactionInput!
    where: NexusGenInputs['TransactionTagsWhereUniqueInput']; // TransactionTagsWhereUniqueInput!
  }
  TransactionTagsUpdateWithoutTransactionInput: { // input type
    createdAt?: NexusGenInputs['DateTimeFieldUpdateOperationsInput'] | null; // DateTimeFieldUpdateOperationsInput
    tag?: NexusGenInputs['TagUpdateOneRequiredWithoutTransactionsInput'] | null; // TagUpdateOneRequiredWithoutTransactionsInput
    updatedAt?: NexusGenInputs['DateTimeFieldUpdateOperationsInput'] | null; // DateTimeFieldUpdateOperationsInput
  }
  TransactionTagsUpsertWithWhereUniqueWithoutTransactionInput: { // input type
    create: NexusGenInputs['TransactionTagsCreateWithoutTransactionInput']; // TransactionTagsCreateWithoutTransactionInput!
    update: NexusGenInputs['TransactionTagsUpdateWithoutTransactionInput']; // TransactionTagsUpdateWithoutTransactionInput!
    where: NexusGenInputs['TransactionTagsWhereUniqueInput']; // TransactionTagsWhereUniqueInput!
  }
  TransactionTagsWhereUniqueInput: { // input type
    transactionId_tagId?: NexusGenInputs['TransactionTagsTransactionIdTagIdCompoundUniqueInput'] | null; // TransactionTagsTransactionIdTagIdCompoundUniqueInput
  }
  TransactionUpdateInput: { // input type
    amount?: NexusGenInputs['NullableFloatFieldUpdateOperationsInput'] | null; // NullableFloatFieldUpdateOperationsInput
    createdAt?: NexusGenInputs['DateTimeFieldUpdateOperationsInput'] | null; // DateTimeFieldUpdateOperationsInput
    date?: NexusGenInputs['NullableDateTimeFieldUpdateOperationsInput'] | null; // NullableDateTimeFieldUpdateOperationsInput
    id?: NexusGenInputs['StringFieldUpdateOperationsInput'] | null; // StringFieldUpdateOperationsInput
    isFavourite?: NexusGenInputs['NullableBoolFieldUpdateOperationsInput'] | null; // NullableBoolFieldUpdateOperationsInput
    name?: NexusGenInputs['NullableStringFieldUpdateOperationsInput'] | null; // NullableStringFieldUpdateOperationsInput
    note?: NexusGenInputs['NullableStringFieldUpdateOperationsInput'] | null; // NullableStringFieldUpdateOperationsInput
    tags?: NexusGenInputs['TransactionTagsUpdateManyWithoutTransactionInput'] | null; // TransactionTagsUpdateManyWithoutTransactionInput
    type?: NexusGenInputs['EnumTransactionTypeFieldUpdateOperationsInput'] | null; // EnumTransactionTypeFieldUpdateOperationsInput
    updatedAt?: NexusGenInputs['DateTimeFieldUpdateOperationsInput'] | null; // DateTimeFieldUpdateOperationsInput
  }
  TransactionWhereUniqueInput: { // input type
    id?: string | null; // String
  }
}

export interface NexusGenEnums {
  QueryMode: "default" | "insensitive"
  TransactionType: "EXPENSE" | "INCOME"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateTime: any
}

export interface NexusGenObjects {
  Mutation: {};
  Query: {};
  Transaction: { // root type
    amount?: number | null; // Float
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    date?: NexusGenScalars['DateTime'] | null; // DateTime
    id: string; // String!
    isFavourite?: boolean | null; // Boolean
    name?: string | null; // String
    note?: string | null; // String
    type: NexusGenEnums['TransactionType']; // TransactionType!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  Mutation: { // field return type
    createOneTransaction: NexusGenRootTypes['Transaction']; // Transaction!
    updateOneTransaction: NexusGenRootTypes['Transaction'] | null; // Transaction
  }
  Query: { // field return type
    transaction: NexusGenRootTypes['Transaction'] | null; // Transaction
    transactions: NexusGenRootTypes['Transaction'][]; // [Transaction!]!
  }
  Transaction: { // field return type
    amount: number | null; // Float
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    date: NexusGenScalars['DateTime'] | null; // DateTime
    id: string; // String!
    isFavourite: boolean | null; // Boolean
    name: string | null; // String
    note: string | null; // String
    type: NexusGenEnums['TransactionType']; // TransactionType!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
}

export interface NexusGenFieldTypeNames {
  Mutation: { // field return type name
    createOneTransaction: 'Transaction'
    updateOneTransaction: 'Transaction'
  }
  Query: { // field return type name
    transaction: 'Transaction'
    transactions: 'Transaction'
  }
  Transaction: { // field return type name
    amount: 'Float'
    createdAt: 'DateTime'
    date: 'DateTime'
    id: 'String'
    isFavourite: 'Boolean'
    name: 'String'
    note: 'String'
    type: 'TransactionType'
    updatedAt: 'DateTime'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    createOneTransaction: { // args
      data: NexusGenInputs['TransactionCreateInput']; // TransactionCreateInput!
    }
    updateOneTransaction: { // args
      data: NexusGenInputs['TransactionUpdateInput']; // TransactionUpdateInput!
      where: NexusGenInputs['TransactionWhereUniqueInput']; // TransactionWhereUniqueInput!
    }
  }
  Query: {
    transaction: { // args
      where: NexusGenInputs['TransactionWhereUniqueInput']; // TransactionWhereUniqueInput!
    }
    transactions: { // args
      after?: NexusGenInputs['TransactionWhereUniqueInput'] | null; // TransactionWhereUniqueInput
      before?: NexusGenInputs['TransactionWhereUniqueInput'] | null; // TransactionWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}